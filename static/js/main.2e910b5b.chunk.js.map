{"version":3,"sources":["components/AdditionalInfo/AdditionalInfo.js","components/Card/Card.js","components/CardCarousel/CardCarousel.js","components/WeatherWidget/WeatherWidget.js","App.js","index.js","images/weather-background.jpg"],"names":["useStyles","makeStyles","theme","dayOfWeek","borderBottom","marginBottom","AdditionalInfo","currentDayInfo","classes","Grid","container","Hidden","smUp","xs","Typography","variant","className","item","sm","md","t","feelsLike","preasure","humidity","windSpeed","description","xsDown","weatherWidgetBody","backgroundColor","color","boxShadow","padding","spacing","margin","width","media","display","height","weatherDescription","paddingBottom","Card","icon","Paper","align","CardMedia","image","title","min","Math","round","max","carousel","buttonArrows","CardCarousel","daily","React","useState","activeItemIndex","setActiveItemIndex","amountOfCard","setAmountOfCard","xsMin","useMediaQuery","smMd","mdMax","lg","useEffect","console","log","requestToChangeActive","numberOfCards","leftChevron","IconButton","aria-label","rightChevron","outsideChevron","map","day","index","weather","temp","main","key","header","fontFamily","mediaWrapper","justifyContent","currentDay","breakpoints","down","additionalInfo","marginTop","WeatherWidget","weatherData","currentWeather","setCurrentWeather","setCurrentDay","setDaily","week","date","Date","getDay","feels_like","pressure","wind_speed","current","currentWeatherIcon","String","getDate","padStart","month","getMonth","year","getFullYear","getCurrentDate","app","position","zIndex","top","left","backgroundSize","backgroundPosition","backgroundImage","maxWidth","up","App","data","setDate","axios","get","then","res","justify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2e910b5b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst useStyles = makeStyles((theme) => ({\n  dayOfWeek: {\n    borderBottom: '2px solid #fff',\n    marginBottom: 10\n  }\n}));\n\nconst AdditionalInfo = ({ currentDayInfo }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Hidden smUp>\n        <Grid xs={12}>\n          <Typography variant='h4' className={classes.dayOfWeek}>\n            {currentDayInfo.dayOfWeek}\n          </Typography>\n        </Grid>\n          \n        </Hidden>\n      <Grid item xs={8} sm={6} md={3}>\n        <Typography variant='body1'>\n          Tempurature, &#176; C:\n        </Typography>\n        <Typography variant='body1'>\n          Feels like:\n        </Typography>\n        <Typography variant='body1'>\n          Pressure, mm Hg:\n        </Typography>\n        <Typography variant='body1'>\n          Humidity, %:\n        </Typography>\n        <Typography variant='body1'>\n          Wind speed, m/s:\n        </Typography>\n        <Typography variant='body1'>\n          Description:\n        </Typography>\n      </Grid>\n      \n      <Grid item xs={4} sm={3} md={6}>\n        <Typography variant='body1'>\n          {currentDayInfo.t} &#176; C\n        </Typography>\n        <Typography variant='body1'>\n          {currentDayInfo.feelsLike} &#176; C\n        </Typography>\n        <Typography variant='body1'>\n          {currentDayInfo.preasure}\n        </Typography>\n        <Typography variant='body1'>\n          {currentDayInfo.humidity}%\n        </Typography>\n        <Typography variant='body1'>\n          {currentDayInfo.windSpeed}\n        </Typography>\n        <Typography variant='body1'>\n          {currentDayInfo.description}\n        </Typography>\n      </Grid>\n      <Hidden xsDown>\n      <Grid item xs={12} sm={3} md={3}>\n        <Typography variant='h4'>\n          {currentDayInfo.dayOfWeek}\n        </Typography>\n      </Grid>\n        </Hidden>\n    </Grid>\n  )\n}\n\nexport default AdditionalInfo;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyles = makeStyles((theme) => ({\n  weatherWidgetBody: {\n    backgroundColor: 'rgba(30, 139, 195, 0.4)',\n    color: '#fff',\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n    padding: theme.spacing(2),\n    margin: '20px auto 10px',\n    width: 120,\n  },\n  media: {\n    display: 'block',\n    width: 80,\n    height: 80,\n    margin: '0 auto'\n  },\n  weatherDescription: {\n    borderBottom: '1px solid #fff',\n    marginBottom: 10,\n    paddingBottom: 10,\n  }\n}));\n\nconst Card = ({ icon, t, description, dayOfWeek }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.weatherWidgetBody}>\n      <Typography variant='body1' align=\"center\">{dayOfWeek}</Typography>\n      <CardMedia\n        className={classes.media}\n        image={icon}\n        title=\"weather\"\n      />\n      <Typography variant='body2' align=\"center\" className={classes.weatherDescription}>\n        {description}\n      </Typography>\n      <Typography variant='body2' align=\"center\">\n        min &nbsp;\n            {t.min > 0 ? '+' : '-'}\n        {Math.round(t.min)}&#176;\n          </Typography>\n      <Typography variant='body2' align=\"center\">\n        max &nbsp;\n            {t.max > 0 ? '+' : '-'}\n        {Math.round(t.max)}&#176;C\n          </Typography>\n\n    </Paper>\n  )\n}\n\nexport default Card;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '../Card/Card';\nimport ItemsCarousel from 'react-items-carousel';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nconst useStyles = makeStyles((theme) => ({\n  carousel: {\n    width: '100%',\n    margin: '0 auto'\n  },\n  buttonArrows: {\n    color: '#fff',\n    backgroundColor: 'rgba(30, 139, 195, 0.8)',\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n  }\n}));\n\nconst CardCarousel = ({ daily, dayOfWeek }) => {\n  const classes = useStyles();\n  const [activeItemIndex, setActiveItemIndex] = React.useState(0);\n  const [amountOfCard, setAmountOfCard] = React.useState(0);\n\n  const xsMin = useMediaQuery('(max-width:360px)');\n  const xs = useMediaQuery('(max-width:520px)');\n  const smMd = useMediaQuery('(max-width:700px)');\n  const sm = useMediaQuery('(max-width:900px)');\n  const md = useMediaQuery('(max-width:1030px)');\n  const mdMax = useMediaQuery('(max-width:1280px)');\n  const lg = useMediaQuery('(max-width:1480px)');\n\n  useEffect(() => {\n    console.log(md || mdMax);\n    setAmountOfCard(\n      xsMin ? 1 :\n        xs ? 2 :\n          smMd ? 3 :\n            sm ? 4 :\n              md ? 5 :\n                mdMax ? 5 :\n                  lg ? 5 : 6\n    )\n  }, [xs, sm, md, xsMin, smMd, mdMax, lg]);\n\n  return (\n    <div className={classes.carousel}>\n      <ItemsCarousel\n        requestToChangeActive={setActiveItemIndex}\n        activeItemIndex={activeItemIndex}\n        numberOfCards={amountOfCard}\n        leftChevron={\n          <IconButton aria-label=\"delete\" className={classes.buttonArrows}>\n            <ChevronLeftIcon />\n          </IconButton>\n        }\n        rightChevron={\n          <IconButton aria-label=\"delete\" className={classes.buttonArrows}>\n            <ChevronRightIcon />\n          </IconButton>\n        }\n        outsideChevron={false}\n      >\n        {daily.map((day, index) => (\n          <Card\n            icon={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n            t={day.temp}\n            description={day.weather[0].main}\n            key={index}\n            dayOfWeek={dayOfWeek()}\n          />\n        ))}\n      </ItemsCarousel>\n    </div>\n  )\n}\n\nexport default CardCarousel;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import WeatherCard from '../WeatherCard/WeatherCard';\nimport AdditionalInfo from '../AdditionalInfo/AdditionalInfo';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n// import ItemsCarousel from 'react-items-carousel';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import IconButton from '@material-ui/core/IconButton';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CardCarousel from '../CardCarousel/CardCarousel'\n\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    fontFamily: 'Georgia',\n  },\n  media: {\n    width: 150,\n    height: 150,\n  },\n  mediaWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  currentDay: {\n    borderBottom: '2px solid #fff'\n  },\n  weatherWidgetBody: {\n    backgroundColor: 'rgba(30, 139, 195, 0.1)',\n    color: '#fff',\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n    padding: theme.spacing(2),\n    margin: '-20px 0 -10px -20px',\n    [theme.breakpoints.down('xs')]: {\n      margin: '-20px -20px 20px',\n    },\n  },\n  additionalInfo: {\n    padding: theme.spacing(2),\n    marginTop: -20,\n\n    [theme.breakpoints.down('xs')]: {\n      padding: 0,\n    },\n  },\n  buttonArrows: {\n    color: '#fff',\n    backgroundColor: 'rgba(30, 139, 195, 0.8)',\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n  }\n}));\n\nconst WeatherWidget = ({ weatherData }) => {\n  const classes = useStyles();\n\n  const [currentWeather, setCurrentWeather] = React.useState({});\n  const [currentDay, setCurrentDay] = React.useState({});\n  const [daily, setDaily] = React.useState([]);\n\n  const week = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const date = new Date();\n  let dayOfWeek = date.getDay();\n\n  const currentDayInfo = {\n    t: Math.round(currentDay.temp),\n    feelsLike: Math.round(currentDay.feels_like),\n    preasure: Math.round(currentDay.pressure / 1.333),\n    humidity: currentDay.humidity,\n    windSpeed: currentDay.wind_speed,\n    description: currentWeather.description,\n    dayOfWeek: week[dayOfWeek],\n  }\n\n  useEffect(() => {\n    if (weatherData.current && weatherData && weatherData.current.weather) {\n      setCurrentDay(weatherData.current)\n      if (weatherData.current.weather) {\n        setCurrentWeather(weatherData.current.weather[0])\n        setDaily(weatherData.daily)\n      }\n    }\n  }, [weatherData, currentDay, currentWeather, daily]);\n\n  const getDayOfWeek = () => {\n    dayOfWeek = (dayOfWeek + 1)\n    if (dayOfWeek > 6) {\n      dayOfWeek = 0;\n    }\n\n    return week[dayOfWeek]\n  }\n\n  const getCurrentDate = () => {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const year = date.getFullYear();\n\n    return `${day}.${month}.${year}`;\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} className={classes.currentDay}>\n        <Grid container>\n          <Grid item xs={12} sm={3} className={classes.currentWeatherIcon}>\n            <Paper className={classes.weatherWidgetBody}>\n              <Typography variant='h4' className={classes.header}>\n                <LocationOnIcon />\n                Kyiv\n              </Typography>\n              <Typography variant='h5' className={classes.header}>\n                {getCurrentDate()}\n              </Typography>\n\n              <div className={classes.mediaWrapper}>\n                <CardMedia\n                  className={classes.media}\n                  image={`http://openweathermap.org/img/wn/${currentWeather ? currentWeather.icon : ''}@2x.png`}\n                  title=\"weather\"\n                />\n              </div>\n\n              <Typography variant='body2' align=\"center\" className={classes.weatherDescription}>\n                {currentWeather.main}\n              </Typography>\n            </Paper>\n\n          </Grid>\n          <Grid item xs={12} sm={9} className={classes.additionalInfo}>\n            <AdditionalInfo\n              currentDayInfo={currentDayInfo}\n            />\n          </Grid>\n        </Grid>\n\n      </Grid>\n      <CardCarousel daily={daily} dayOfWeek={getDayOfWeek} />\n    </Grid>\n  )\n}\n\nexport default WeatherWidget;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WeatherWidget from './components/WeatherWidget/WeatherWidget';\nimport image from './images/weather-background.jpg';\nimport { Grid, Paper } from '@material-ui/core';\nimport axios from 'axios';\n\nconst API_URL = 'https://api.openweathermap.org/data/2.5/onecall?lat=50.4333&lon=30.5167&exclude=minutely,hourly&appid=e7c594ddf234f6118da8b7460df04a79&units=metric';\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    backgroundImage: `url(${image})`,\n    fontFamily: 'Georgia',\n\n    // [theme.breakpoints.down('xs')]: {\n    //   objectFit: 'fill'\n    // },\n  },\n  weatherWidgetBody: {\n    maxWidth: 1000,\n    backgroundColor: 'rgba(44, 62, 80, 0.9)',\n    color: '#fff',\n    boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n    margin: '50px 10px 0',\n    padding: theme.spacing(3),\n\n    [theme.breakpoints.down('xs')]: {\n      margin: 10,\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: '50px auto 0',\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setDate] = React.useState({})\n\n  useEffect(() => {\n    axios.get(API_URL)\n      .then(res => {\n        setDate(res.data);\n      })\n    },\n    [],\n  );\n\n  return (\n    <div className={classes.app}>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={12} md={12} lg={8}>\n          <Paper className={classes.weatherWidgetBody}>\n            <WeatherWidget weatherData={data} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/weather-background.96c42b36.jpg\";"],"sourceRoot":""}